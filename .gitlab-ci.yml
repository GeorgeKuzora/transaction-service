stages:
  - build
  - lint
  - test

variables:
  PYTHON_VERSION: 3.12.4
  POETRY_VERSION: 1.8.3
  SOURCE_CODE_DIR: 'src'
  APP_CODE_DIR: 'src/app'
  TEST_CODE_DIR: 'src/tests'
  CONFIG_PATH: 'src/config/config-local.yml'

default:
  image: python:3.12.4-slim-bookworm
  before_script:
    - export PIP_NO_CACHE_DIR=off
    - export PIP_DISABLE_PIP_VERSION_CHECK=on
    - export PIP_DEFAULT_TIMEOUT=100
    - export PYTHONUNBUFFERED=1
    - export PYTHONDONTWRITEBYTECODE=1
    - export PYTHONFAULTHANDLER=1
    - export SOURCE_CODE_DIR=$SOURCE_CODE_DIR
    - export APP_CODE_DIR=$APP_CODE_DIR
    - export TEST_CODE_DIR=$TEST_CODE_DIR
    - export PYTHONPATH=$SOURCE_CODE_DIR
    - export CONFIG_PATH=$CONFIG_PATH
    - export POETRY_VIRTUALENVS_IN_PROJECT=false
    - export POETRY_NO_INTERACTION=1
    - export POETRY_VERSION=$POETRY_VERSION
    - export PATH="$POETRY_HOME/bin:$PATH"
    - export PATH="/root/.local/bin:$PATH"
    - apt-get update
    - apt-get install --no-install-recommends -y pipx
    - pipx install poetry==$POETRY_VERSION
    - poetry install --all-extras --compile --no-root

docker-build-job:
  interruptible: true
  stage: build
  image:
    docker:27.1.2-cli
  services:
    - name: docker:27.1.2-dind
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - "**/*"
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
        - $SOURCE_CODE_DIR/**/*
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
        - "**/*"
      when: manual
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    IMAGE_NAME: "transaction-service:latest"
    BUILD_IMAGE: "${DOCKER_REG}/${IMAGE_NAME}"
  before_script:
    - docker info
    - docker login -u ${DOCKER_REG} -p ${DOCKER_PASSWORD}
  script:
    - docker build -t ${BUILD_IMAGE} .
    - docker tag ${BUILD_IMAGE} ${BUILD_IMAGE}
    - docker push ${BUILD_IMAGE}
  after_script:
    - docker logout

flake8-lint-job:
  interruptible: true
  stage: lint
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - '**/*'
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
        - $SOURCE_CODE_DIR/**/*
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
        - '**/*'
      when: manual
  script:
    - poetry run flake8 --jobs=1 $SOURCE_CODE_DIR

mypy-lint-job:
  interruptible: true
  stage: lint
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - '**/*'
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
        - $APP_CODE_DIR/**/*
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
        - '**/*'
      when: manual
  script:
    - poetry run mypy $APP_CODE_DIR

pytest-test-job:
  interruptible: true
  stage: test
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - '**/*'
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
        - $SOURCE_CODE_DIR/**/*
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
        - '**/*'
      when: manual
  services:
    - name: postgres:16.3
      alias: db,postgres,pg
      variables:
        POSTGRES_PASSWORD: mysecretpassword
        POSTGRES_USER: myuser
        POSTGRES_DB: mydatabase
    - name: redis:7.4.0
      alias: redis,cache
      variables:
        REDIS_PASSWORD: my-password
        REDIS_PORT: 6379
        REDIS_DATABASES: 16
  script:
    - "poetry run alembic upgrade head"
    - "poetry run pytest --disable-warnings src"
